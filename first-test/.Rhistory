)
df$isTree <- NULL
c <- cor(df)
df
classifiers <- df$classifier
df$classifier <- NULL
c <- cor(df)
df
summary(df)
df$dataset <- NULL
c <- cor(df)
c
df
?cor
c <- cor(df, na.rm = TRUE)
c <- cor(df, use = "na.or.complete")
c
c <- cor(df, use="na.or.complete")
c[,c$roc]
c[,ncol(c)]
c[,ncol(c)-1]
c <- cor(df, use="complete.obs")
c[,ncol(c)-1]
c[,ncol(c)]
c[,ncol(c)-1]
c[,ncol(c)]
f <- read.csv('~/Downloads/effectiveness-study - features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df$dataset <- NULL
df$isTree <- NULL
classifiers <- df$classifier
df$classifier <- NULL
c <- cor(df, use="complete.obs")
c[,ncol(c)]
c[,ncol(c)]
c[,ncol(c)-1]
c[,ncol(c)]
c <- cor(df[4,nrow(df)], use="complete.obs")
c <- cor(df[4:nrow(df),], use="complete.obs")
c[,ncol(c)]
c <- cor(df, use="complete.obs")
c[,ncol(c)]
c <- cor(df, use="complete.obs")
c[,ncol(c)]
f <- read.csv('~/Downloads/effectiveness-study - features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df$dataset <- NULL
df$isTree <- NULL
classifiers <- df$classifier
df$classifier <- NULL
c <- cor(df, use="complete.obs")
c[,ncol(c)]
c <- cor(df[4:nrow(df),], use="complete.obs")
c[,ncol(c)]
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
with(df, table(ses, prog))
mlr <- multinom(classifier ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstanceVGIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
mlr <- multinom(classifiers ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstanceVGIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
mlr <- multinom(classifiers ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
summary(mlr)
z <- summary(mlr)$coefficients/summary(mlr)$standard.errors
z
p <- (1 - pnorm(abs(z), 0, 1)) * 2
p
summary(mlr)
c[,ncol(c)]
c[,ncol(c)-1]
c[,ncol(c)]
c[,ncol(c)-1]
f <- read.csv('~/Downloads/effectiveness-study - features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df
View(df)
df$X.2 <- NULL
View(df)
df$classifier <- NULL
df$f <- NULL
df$roc <- NULL
View(df)
library(stargzer)
library(stargazer)
install.packages('stargazer')
library(stargazer)
stargazer(df)
stargazer(df, format='HTML')
?stargazer
stargazer(df, type='HTML')
stargazer(df, type='html')
install.packages("xtable")
library("xtable")
print(xtable(df), type="html")
print(xtable(df), type="html", digits=c(0,0,0,2,8,0,0,0,0,0,2,0,8,8,0,8,8))
print(xtable(df), type="html", digits=c(0,0,0,0,2,8,0,0,0,0,0,2,0,8,8,0,8,8))
f <- read.csv('~/Downloads/features.tsv')
f <- read.csv('~/Downloads/effectiveness-study - features-final.csv')
fdf <- data.frame(f)
print(xtable(fdf), type="html")
library(xtable)
print(xtable(fdf), type="html")
f <- read.csv('~/Downloads/effectiveness-study - features-final.csv', headers=FALSE)
?read.csv
View(fdf)
f <- read.csv('~/Downloads/effectiveness-study - features-final.csv', header=FALSE)
View(f)
fdf <- data.frame(f)
View(fdf)
fdf$names <- c("dataset", "1stFeat", "2ndFeat", "3rdFeat", "4thFeat", "5thFeat", "6thFeat", "7thFeat", "8thFeat", "9thFeat", "10thFeat", )
names(fdf)
fdf$names <- c("dataset", "1stFeat", "2ndFeat", "3rdFeat", "4thFeat", "5thFeat", "6thFeat", "7thFeat", "8thFeat", "9thFeat", "10thFeat")
names(fdf) <- c("dataset", "1stFeat", "2ndFeat", "3rdFeat", "4thFeat", "5thFeat", "6thFeat", "7thFeat", "8thFeat", "9thFeat", "10thFeat")
View(fdf)
print(xtable(fdf), type="html")
mlr
f <- read.csv('~/Downloads/effectiveness-study - features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
df$dataset <- NULL
df$isTree <- NULL
classifiers <- df$classifier
df$classifier <- NULL
c <- cor(df[4:nrow(df),], use="complete.obs")
library(stargazer)
stargazer(c)
?stargazer
rf <- lm(f ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
rr <- <- lm(roc ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
rr <- lm(roc ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
stargazer(rf, rr, format="html")
stargazer(rf, rr, format="html", align="true")
stargazer(rf, rr, format="html", align=TRUE)
stargazer(rf, rr, type="html", align=TRUE)
rf <- lm(f ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df[4:nrow(df),])
rr <- lm(roc ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df[4:nrow(df),])
stargazer(rf, rr, type="html", align=TRUE)
c[,ncol(c)-1]
c[,ncol(c)-1]
c[,ncol(c)-1]
c[,ncol(c)]
print(xtable(c[,ncol(c)]), type="html")
print(xtable(c, type="html")
fg
a
dfs
asdf
print(xtable(c), type="html")
print(xtable(c[,ncol(c)-1]), type="html")
c[,ncol(c)-1]
print(xtable(c[1:2,ncol(c)-1]), type="html")
mlr <- multinom(classifiers ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
summary(mlr)
f <- read.csv('~/Downloads/effectiveness-study - features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
df$dataset <- NULL
df$isTree <- NULL
mlr <- multinom(classifiers ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
mlr <- multinom(classifiers ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
summary(mlr)
stargazer(mlr)
stargazer(mlr, type="html")
install.packages('ProjectTemplatel')
install.packages('ProjectTemplatel')
install.packages('ProjectTemplate')
library(ProjectTemplate)
pwd
pwd()
getwd()
setwd('/Users/Albert/src/R-tests')
create.project('first-test')
f <- read.csv('data/features.csv')
getwd()
setwd('first-test')
f <- read.csv('data/features.csv')
df <- data.frame(f)
df$X <- NULL
df$X.1 <- NULL
df$X.2 <- NULL
df$dataset <- NULL
df$isTree <- NULL
classifiers <- df$classifier
View(df)
c <- cor(df, use="complete.obs")
c <- cor(df[,-c(16:18)], use="complete.obs")
View(c)
setwd('')
qqplot(df$totalSize)
summary(df)
hist(df$totalSize)
hist(log(df$totalSize))
hist(df$maxTreeDepth)
hist(log(df$maxTreeDepth)
)
rf <- lm(f ~ totalSize + nSnapshots + avgGap + avgSize + nInserts + nDeletes + nComm + maxTreeDepth + avgTreeDepth + totalInstances + ratioInstances + ratioInstancesVSIS + totalStructural + ratioStructural + ratioStructuralVSIS, data = df)
install.packages('car')
library(car)
vif(rf)
summary(rf)
rf.0 <- lm(f ~ nSnapshots, data=df)
summary(rf.0)
rr.0 <- lm(roc ~ nSnapshots, data=df)
summary(rr.0)
rf.0 <- lm(f ~ nSnapshots + nInserts , data=df)
install.packages('memisc')
library(memisc)
mtable(rf.0)
summary(df$nInserts)
rf.0 <- lm(f ~ nSnapshots + log(nInserts) , data=df)
mtable(rf.0)
hist(df$nSnapshots)
hist(log(df$nSnapshots))
rf.0 <- lm(f ~ log(nSnapshots) + log(nInserts) , data=df)
rr.0 <- lm(roc ~ log(nSnapshots), data=df)
mtable(rf.0)
mtable(rf.0, rr.0)
summary(df$f)
hist(df$f)
hist(log(df$f)
)
hist(log(df$rov))
hist(log(df$roc))
hist(df$roc)
hist(df$roc)
mtable(rr.0)
rr.1 <- lm(roc ~ log(nSnapshots) + avgGap + log(totalSize), data=df)
mtable(rr.1)
vif(rr.1)
sqrt(vif(rr.1)) > 2 # problem?
hist(df$avgGap)
hist(log(df$avgGap)
)
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize), data=df)
mtable(rr.1)
hist(df$maxTreeDepth)
hist(log(df$maxTreeDepth)
)
cor.test(df$avgTreeDepth, df$maxTreeDepth)
hist(maxTreeDepth)
hist(df$maxTreeDepth)
hist(df$avgTreeDepth)
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + maxTreeDepth, data=df)
mtable(rr.1)
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth, data=df)
mtable(rr.1)
stargazer(rr.1, type=text)
library(stargazer)
stargazer(rr.1, type=text)
stargazer(rr.1, type='text')
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + maxTreeDepth, data=df)
stargazer(rr.1, type='text')
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth, data=df)
stargazer(rr.1, type='text')
cor.test(df$ratioInstances, df$ratioStructural)
hist(df$ratioInstances)
hist(df$ratioStructural)
hist(log(df$ratioStructural)
hist(log(df$ratioStructural))
hist(log(df$ratioStructural))
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
stargazer(rr.1, type='text')
rr.1b <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS + ratioStructuralVSIS, data=df)
stargazer(rr.0, rr.1, rr.1b, type='text', no.space=TRUE)
summary(rr.1b)
cor.test(df$ratioInstancesVSIS, df$ratioStructuralVSIS)
summary(df$ratioStructuralVSIS)
class(df$ratioStructuralVSIS)
hist(df$ratioStructuralVSIS)
m <- lm(roc ~ ratioStructuralVSIS, data=df)
m
summary(m)
cor.test(df$ratioStructuralVSIS, df$avgTreeDepth)
rr.1c <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + ratioInstancesVSIS + ratioStructuralVSIS, data=df)
stargazer(rr.0, rr.1, rr.1b, rr.1c, type='text', no.space=TRUE)
vif(rr.1c)
rr.1c <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + ratioInstancesVSIS, data=df)
rr.1b <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS, data=df)
stargazer(rr.0, rr.1, rr.1b, type='text', no.space=TRUE)
rm.0 <- lm(classifier ~ log(nSnapshots), data=df)
rm.1 <- lm(classifier ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
rm.1b <- lm(classifier ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS, data=df)
table(df$classifier)
class(df$classifier)
table(df$classifier)
df$classifier2[df$classifier == "weka.classifiers.bayes.NaiveBayes" |
df$classifier == "weka.classifiers.bayes.BayesNet"] <- "bayes"
df$classifier2[df$classifier == "weka.classifiers.functions.MultilayerPerceptron" |
df$classifier == "weka.classifiers.functions.SimpleLogistic" |
df$classifier == "weka.classifiers.functions.Logistic" |
df$classifier == "weka.classifiers.functions.SGD" |
df$classifier == "weka.classifiers.functions.VotedPerceptron"] <- "functions"
df$classifier2[df$classifier == "weka.classifiers.rules.DecisionTable" |
df$classifier == "weka.classifiers.rules.OneR" |
df$classifier == "weka.classifiers.rules.JRip"] <- "rules"
df$classifier2[df$classifier == "weka.classifiers.trees.HoeffdingTree" |
df$classifier == " weka.classifiers.trees.RandomForest" |
df$classifier == "weka.classifiers.trees.DecisionStump" |
df$classifier == "weka.classifiers.trees.J48"] <- "trees"
table(df$classifier2)
rm.0 <- lm(classifier2 ~ log(nSnapshots), data=df)
rm.1 <- lm(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
rm.1b <- lm(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS, data=df)
rm.0 <- multinom(classifier ~ log(nSnapshots), data=df)
require(nnet)
rm.0 <- multinom(classifier ~ log(nSnapshots), data=df)
rm.1 <- multinom(classifier ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
rm.1b <- multinom(classifier ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS, data=df)
# Masses categories a la categorica de resposta; rebaixar. La recodifiquem.
stargazer(rm.0, type='text', no.space=TRUE)
rm.0 <- multinom(classifier2 ~ log(nSnapshots), data=df)
rm.1 <- multinom(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
rm.1b <- multinom(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstancesVSIS, data=df)
stargazer(rm.0, type='text', no.space=TRUE)
stargazer(rm.0, rm.1, rm.1b type='text', no.space=TRUE)
stargazer(rm.0, rm.1, rm.1b, type='text', no.space=TRUE)
install.packages('arm')
library(arm0)
library(arm)
coefplot(rr.1)
?coefplot
coefplot(rr.1)
coefplot(rr.1, main="Hola")
coefplot(rr.1, main="")
coefplot(rr.1, main="", xlim=c(-5,5))
coefplot(rr.1, main="", xlim=c(-5,5), vertical=FALSE)
coefplot(rr.1, main="", xlim=c(-5,5))
coefplot(rr.1, main="", xlim=c(-5,5), mar=c(1,5,5.1,2))
coefplot(rr.1, main="", xlim=c(-5,5), mar=c(1,6,5.1,2))
pdf("graphs/coefs_linearmodel.pdf", width=7)
coefplot(rr.1, main="", xlim=c(-5,5), mar=c(1,6,5.1,2))
dev.off()
coefplot(rr.1, main="", xlim=c(-5,2), mar=c(1,6,5.1,2))
coefplot(rr.1, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
library(arm)
pdf("graphs/coefs_linearmodel.pdf", width=7)
coefplot(rr.1, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
dev.off()
mtable(rm.1)
exp(0.684)
library(effects)
install.packages('effects')
library(effects)
plot(effect('log(totalSize)', rm.1))
plot(effect('totalSize', rm.1))
plot(effect('log(totalSize)', rm.1))
plot(effect('log(avgGap)', rm.1))
plot(allEffects(rm.1))
plot(allEffects(rm.1), rug=FALSE)
plot(effect('log(totalSize)', rm.1))
plot(effect('log(avgGap)', rm.1))
plot(effect('log(avgGap)', rm.1), se=FALSE)
plot(effect('log(avgGap)', rm.1), se=FALSE)
plot(effect('log(avgGap)', rm.1, se=FALSE)
plot(effect('log(avgGap)', rm.1, se=FALSE))
plot(effect('log(avgGap)', rm.1, se=FALSE))
plot(effect('log(avgGap)', rm.1), confint=FALSE)
plot(effect('log(avgGap)', rm.1), confint=FALSE, rug=FALSE)
stargazer(rr.0, rr.1, rr.1b, type='text', no.space=TRUE)
plot(effect('avgTreeDepth', rr.1))
plot(effect('avgTreeDepth', rr.1), main="", rug=FALSE)
plot(effect('avgTreeDepth', rr.1), main="", rug=FALSE, xlab="Input KOS chain average tree depth", ylab="Area under ROC")
pdf("graphs/treedepth_vs_roc.pdf")
plot(effect('avgTreeDepth', rr.1), main="", rug=FALSE, xlab="Input KOS chain average tree depth", ylab="Area under ROC")
dev.off()
plot(effect('ratioStructural', rr.1), main="", rug=FALSE, xlab="Input KOS structural property ratio", ylab="Area under ROC")
e <- effect('ratioStructural', rr.1)
e
str(e)
summary(e)
print(e)
hist(df$nInserts)
hist(log(df$nInserts))
cor.test(df$totalSize, df$nInserts)
df$ratioInserts <- df$nInserts / (df$nInserts + df$nDeletes + df$nComms)
df$ratioInserts[df$nInserts,] <- df$nInserts / (df$nInserts + df$nDeletes + df$nComms)
View(df)
df$ratioInserts[df$nInserts,] <- df$nInserts / (df$nInserts + df$nDeletes + df$nComms)
summary(df$ratioInserts)
df$nInserts / (df$nInserts + df$nDeletes + df$nComms)
df$nInserts
df$nInserts / df$nDeletes
df$nInserts / (df$nDeletes + df$nInserts)
df$ratioInserts <- df$nInserts / (df$nInserts + df$nDeletes + df$nComm)
View(df)
df$ratioInserts <- df$nInserts / (df$nInserts + df$nDeletes + df$nComm)
df$ratioDeletes <- df$nDeletes / (df$nInserts + df$nDeletes + df$nComm)
df$ratioComm <- df$nComm / (df$nInserts + df$nDeletes + df$nComm)
cor.test(df$ratioInserts, df$totalSize)
cor.test(df$ratioDeletes, df$totalSize)
cor.test(df$ratioComm, df$totalSize)
cor.test(df$ratioInserts, df$nInserts)
cor.test(df$ratioInserts, df$nDeletes)
cor.test(df$ratioDeletes, df$nDeletes)
cor.test(df$ratioComm, df$nDeletes)
stargazer(rr.0, rr.1, rr.1b, type='text', no.space=TRUE)
stargazer(rf, rr, type="html", align=TRUE)
stargazer(rm.0, rm.1, rm.1b, type='text', no.space=TRUE)
hist(df$ratioInserts)
hist(df$ratioDeletes)
hist(df$ratioComm)
cor.test(df$ratioInserts, df$ratioDeletes)
rr.2 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts, data=df)
stargazer(rr.1, rr.2, type='text', no.space=TRUE)
rr.3 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioDeletes, data=df)
rr.4 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioComm, data=df)
stargazer(rr.1, rr.2, rr.3, rr.4, type='text', no.space=TRUE)
cor.test(df$ratioInserts, df$ratioComm)
rr.5 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts + ratioComm, data=df)
stargazer(rr.1, rr.2, rr.3, rr.4, rr.5, type='text', no.space=TRUE)
stargazer(rr.2, rr.3, rr.4, type='text', no.space=TRUE)
pdf("graphs/coefs_linearmodel_ratioInserts.pdf", width=7)
coefplot(rr.1, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
dev.off()
coefplot(rr.2, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
pdf("graphs/coefs_linearmodel_ratioInserts.pdf", width=7)
coefplot(rr.2, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
dev.off()
?stargazer
stargazer(rr.2, rr.3, rr.4, type='latex', no.space=TRUE)
png("graphs/coefs_linearmodel_ratioInserts.png", width=7)
coefplot(rr.2, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
dev.off()
?png
png("graphs/coefs_linearmodel_ratioInserts.png", width=800)
coefplot(rr.2, main="", xlim=c(-4,2), mar=c(1,6,5.1,2))
dev.off()
rm.2 <- multinom(classifier ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts, data=df)
rm.2 <- multinom(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts, data=df)
rm.3 <- multinom(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioDeletes, data=df)
rm.4 <- multinom(classifier2 ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioComm, data=df)
stargazer(rm.2, rm.3, rm.4, type='text', no.space=TRUE)
stargazer(rm.2, rm.3, rm.4, type='latex', no.space=TRUE)
?multinom
rr.1 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural, data=df)
rr.2 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts, data=df)
rr.3 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioDeletes, data=df)
rr.4 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioComm, data=df)
rr.5 <- lm(roc ~ log(nSnapshots) + log(avgGap) + log(totalSize) + avgTreeDepth + ratioInstances + ratioStructural + ratioInserts + ratioComm, data=df)
stargazer(rr.1, rr.2, rr.3, rr.4, rr.5, type='text', no.space=TRUE)
vif(rr.5)
sqrt(vif(rr.5)) > 2
multnom(classifier2 ~ log(df$avgGap))
multinom(classifier2 ~ log(df$avgGap))
multinom(classifier2 ~ log(df$avgGap), data=df)
multinom <- multinom(classifier2 ~ log(df$avgGap), data=df)
foo <- multinom(classifier2 ~ log(df$avgGap), data=df)
summary(foo)
mtable(foo)
summary(df)
vif(foo)
?lm
stargazer(df)
print(xtable(df, type="html")
)
library(xtable)
print(xtable(df, type="html"))
View(df)
print(xtable(df[,c(1:7,20:22,8:15)], type="html"))
print(xtable(df[,c(1:7,20:22,8:15)], type="html"))
?xtable
print(xtable(df[,c(1:7,20:22,8:15)]))
print(xtable(df[,c(1:7,20:22,8:15)], type="HTML"))
print(xtable(df[,c(1:7,20:22,8:15)], type="html"))
print(xtable(df[,c(1:7,20:22,8:15)], type="ascii"))
?xtable
print(xtable(df[,c(1:7,20:22,8:15)], type="html"))
xtable(df[,c(1:7,20:22,8:15)], type="html")
print(xtable(df[,c(1:7,20:22,8:15)]), type="html")
stargazer(rr.2, rr.3, rr.4, type='text', no.space=TRUE)
stargazer(rr.2, rr.3, rr.4, type='html', no.space=TRUE)
stargazer(rm.2, rm.3, rm.4, type='text', no.space=TRUE)
stargazer(rm.2, rm.3, rm.4, type='html', no.space=TRUE)
plot(allEffects(rm.1), rug=FALSE)
plot(effect('log(avgGap)', rm.1), confint=FALSE, rug=FALSE)
png("graphs/avgGap_sim_classifier.png")
plot(effect('log(avgGap)', rm.1), confint=FALSE, rug=FALSE)
dev.off()
png("graphs/totalSize_sim_classifier.png")
plot(effect('log(totalSize)', rm.1), confint=FALSE, rug=FALSE)
dev.off()
?cor
cor.test
?cor.test
a = c(1, 2, 3, 4, 5)
cor(a)
var(a)
sd(a)
?cor
var(a)
cov(a)
cov(a,a)
cor(a,a)
cor.test
cor.test(a,a)
vif(a,a)
vif(a)
?vif
